desc: why

in_pin:none
out_pin:none


@init

// create an n bit mask
// mask(3) = 111
function mask(n)
(
  pow(2, n)-1;
);

// foo.readBits(6, 3) will read bits 7 thru 9 as if they were their own 3-bit integer
function readBits(offset, nBits)
(
  // foo = 1101111111
  // shifted right 6 bits = 1101
  // 1101 masked by 111 = 0101 -> 5
  (this >> offset) & mask(nBits);
);

// foo.writeBits(6, 3, 2) will write the number 2 into bits 7 thru 9
// (num must fit in numBits, natch)
function writeBits(offset, nBits, num)
(
  // subtract whatever value is in those bits
  // foo = 1111111111 - ([bits 789] << 6) = 1000111111
  this -= this.readBits(offset, nBits) << offset;
  // add num back into that n bit hole
  // foo = 1000111111 + (10 << 6) = 1010111111
  this += num << offset;
  // foo.readBits(3, 6) = 010 = 2
);

function setN(n)
(
  this.n = n;
);

function setM(m)
(
  this.m = m;
);

function writeNandMToMemory(index) (
  bits=0;
  bits.writeBits(0, 4, this.n);
  bits.writeBits(4, 4, this.m);
  bits.writeBits(8,22, mask(22));
  0[index] = bits;
);

@block

foo.setN(5);
foo.setM(7);
foo.writeNandMToMemory(0);
bar = 0[0];
