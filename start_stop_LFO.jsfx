 desc: gianniMIDI start-stop LFO
// an LFO that only runs when a note(s) is held

in_pin:none
out_pin:none

slider1:1<0,10,.001>period (seconds) (0 = use bar/n)
slider2:4<0.25,16,0.25>period (bar/n)
slider3:0<0,127,1>trigger note (0 = all)
slider4:0<0,3,1{sine,triangle,ramp,slide}>shape
slider5:0<0,1,0.0001>output

import gianni-lib.jsfx-inc


@init

ext_noinit = 1;

function setPeriod()
(
  slider1 ? clock.setPeriodSeconds(slider1) : clock.setPeriodBars(slider2);
);

function calcShape(shape) local(phase, output)
(
  phase = clock.getPhase();
  shape == 0 && (
    output = (sin(2 * $pi * (phase - .25)) + 1) / 2; // sine
  );
  shape == 1 && (
    output = phase <= .5 ? (2 * phase) : 2 * (1 - phase) // triangle
  );
  shape == 2 && (
    output = phase; // ramp
  );
  shape == 3 && (
    output = 1 - phase; // slide
  );
  output;
);


@slider

setPeriod();


@block

while (msg.recv())
(
  msg.isNoteOn() && heldNotes += 1;
  msg.isNoteOff() && heldNotes -=1;
  msg.send();
);

heldNotes && slider5 = calcShape(slider4);


@sample

tempochanged() && setPeriod();

heldNotes && clock.tick();
