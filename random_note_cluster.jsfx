desc:gianniMIDI random note cluster

slider1:24<1,127,1>low note
slider2:60<1,127,1>high note
slider3:4<1,16,1># notes
//slider3:4<1,16,1>max notes
//slider4:1<1,16,1>min notes
//slider5:.7<0,1,.1>tendency: min<max
//slider6:1<1,16,1>channels (1 to n)
//slider7:1<0,1,1>channel order: random||iterate

import gianni-lib.jsfx-inc


@init

function isTriggerNote()
(
  this.note() == 0;
);

/* for reference, unused

  function isNewClusterNote()
  (
   this.note() == 1;
  );

*/

function shouldPassThrough() local (s, d)
( 
  // we'll use more performant comparators for high volume
  s = this.statusHi;
  d = this.data1;                                        
  (s != 8 && s != 9) ||  // pass trough if msg is neither note on or off
  ((s == 8 || s == 9) && (d != 0 && d != 1));  // pass through if msg is note but not trigger on/off or new cluster
);


function newCluster()
(
  loop(
    cluster.len,
    cluster.pop(); // clear previous cluster
  );
  loop(
    slider3,
    (
      // default to 0 for statusLo (channel) and data2 (vel), will be determined by trigger note
      msgNC.statusHi = 9;
      msgNC.data1 = slider1 + randInt(range);
      cluster.push(msgNC.toBits();)
    );
  );
);


function sendNoteOns(chan, vel) local(i)
(
  i = 0;
  while(i < cluster.len)
  (
    msgON = cluster[i];
    msgON.parseBits();
    msgON.statusLo = chan;
    msgON.data2 = vel;
    msgON.send();
    i += 1;
  );
);


function sendNoteOffs() local(i)
(
  i = 0;
  while (i < cluster.len)
  (
    msgOFF = cluster[i];
    msgOFF.parseBits();
    msgOFF.statusHi = 8;
    msgOFF.statusLo = playingOnChannel;
    msgOFF.send();
    i += 1;
  );
);


range = slider2-slider1;
playingOnChannel = -1;
cluster.arrayInit(16);
newCluster();


@sample

while (msg.recv())
(
  msg.shouldPassThrough() ? msg.send() :
    (
      msg.isNoteOn() ?
      (
        msg.isTriggerNote() ?
          (
            playingOnChannel == -1 &&
            (
              playingOnChannel = msg.statusLo;
              sendNoteOns(playingOnChannel, msg.data2);
            ) 
          ) 
            : // msg.isNewClusterNote
          ( 
            playingOnChannel == -1 && newCluster();
          );
      )
        :  // msg.isNoteOff, ignore newClusterNote
      ( 
        msg.isTriggerNote() &&
        (
          sendNoteOffs();
          playingOnChannel = -1;
        );
      );
    );
);
